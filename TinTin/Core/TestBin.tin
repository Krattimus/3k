#showme READING testbin.TIN

#class {testbin} {open}


#alias .disposeFish
{
        dispose A small Wanisiki lobster;
        dispose A small Arani starfish;
        dispose A small blue Moonfish scale;
        dispose A small Illate eel;
        dispose A small Tiger striped jellyfish;    
        dispose A small Sarasious sea urchin;    
        dispose A medium sized Wanisiki lobster;
        dispose A medium sized Illate eel;
        dispose seaweed;
        dispose branch;
        dispose A medium sized Arani starfish;
};

#alias .pick
{
        pick box;
        open box;
};

#alias .change { transmogrify %0; };

#alias .laCubes
{
        la cube;
        la cube 2;
        la cube 3;
        la cube 4;
};      

#action {The cube starts to flicker in and out of existence} {wield axe}
#action {A bright beam of light slams from the shimmering into the gigantic cube} {unwield axe};

#var gate 0;

#gag {A flash of insidious insight strikes you!};
#gag {You enter a state of unarmed frenzy!};
#gag {Your aura sparkles with blue lights!};
#gag {Your amulet flashes, and you phase out of harms way!};
#gag {A bolt of pure energy flies out of the sky striking %w};
#gag {You bring your deadly natural weapons down on your opponent!};
#gag {Bonehead, you're at max hit points already.};
#gag {Performing: hands};
#gag {Your body explodes in a *BLUR* of force and power!};

#action {{You are able to identify (.*)...}} 
{
	#SUBSTITUTE {%2} {<338>%2<088>};
        #DELAY {1} {#UNSUBSTITUTE {%2}};
        .logChat {<108>[Found]<088> - %2};
};

#alias .makeRing
{
        plant seed;
        plant seed;
        plant hammer;
        chop tree;
        whittle ring;
        take ring;
};


#NOP List all Roomnotes for 'go' alias
#alias .noteList2
{
        #if { "%0" == "" }
        {
                #map list {roomnote} {%%*%1%%*} {variable} {noterooms};
        };
        #else
        {
        	#map list {roomnote} {%%*%1%%*} {variable} {noterooms};
        };


        #map list {roomnote} {%*%1%*} {variable} {noterooms};
	#foreach {*noterooms[]} {room} {#map get {roomnote} {notes[$room]} {$room}};
	#list notes sort;
	#var notes
};



#alias .ttt
{
        #map find 1;
        #path save forward pathToWalk;
        #foreach {$pathToWalk} {step} 
        {
                #showme STEP [$step];
        };
};

#action {Raest leaves %1\.} 
{ 
        #var event[followDirection] %1;

        #switch {"$event[followDirection]"} 
        {
                #case {"north"}			{#var event[followDirection] n};
                #case {"south"}			{#var event[followDirection] s};
                #case {"east"}			{#var event[followDirection] e};
                #case {"west"}			{#var event[followDirection] w};
                #case {"down"}			{#var event[followDirection] d};
                #case {"up"}			{#var event[followDirection] u};
                #case {"northeast"} 	        {#var event[followDirection] ne};
                #case {"northwest"}		{#var event[followDirection] nw};
                #case {"southeast"}		{#var event[followDirection] se};
                #case {"southwest"}		{#var event[followDirection] sw};
                #case {"through the portal"}	{#var event[followDirection] enter portal};
                #default 	#var event[followDirection] %1
        };

        #map move $event[followDirection]; 
} {1};


#class {testbin} {close}
