#showme READING EVENTS.TIN
#class {events} {open}

/***************************************************************
	Registers a callback alias to be called when triggered
	ex: .registerEvent onMobKilled myCustomAlias

	The alias 'myCustomAlias' will get called when anyone:
		.triggerEvent onMobKilled
***************************************************************/
#alias .registerEvent
{
	#list %1 ADD %2;
};

/***************************************************************
	Removes the callback
***************************************************************/
#alias .unregisterEvent
{
	#if { &{%1} != 0 }
	{
		#list %1 {find} {%2} {lastID};
		
		#while { "$lastID" != "0" }
		{
			#list %1 DELETE $lastID;
			#list %1 {find} {%2} {lastID};
		};
	};
};

/***************************************************************
	Actually does the call
***************************************************************/
#alias {.doTrigger}
{
	#if { &{%1} != 0 }
	{
		#local list ${%1};
		#foreach {$list[%*]} {callback} 
		{
			#if {"%2" == ""}
			{
				#var makeCall $callback;
				$makeCall;
			};
			#else
			{
				#var makeCall $callback {%2};
				$makeCall;
			};
		};
	};
};

/***************************************************************
	Triggers an event. 
		onSomethingOccured
***************************************************************/
#alias {.triggerEvent}
{
	#math {endIndex} {@strlen{%1}-2};
	#local name @substr{{%1};{2};{$endIndex}};
	
	#format preCall {onPre%s} {$name};
	#format call {on%s} {$name};
	#format postCall {onPost%s} {$name};

	
	.doTrigger $preCall {%2};
	.doTrigger $call {%2};
	.doTrigger $postCall {%2};
};

/* Screen Sizing */
#event {SCREEN RESIZE} 
{
	#var screen[rows] %0;
	#var screen[cols] %1;
	#var screen[height] %2;
	#var screen[width] %3;
    #delay 0 {.render};
};

#event {SCROLLED MOUSE WHEEL UP} 
{
	#if {%0 > $screen[rows] - $split[bottom]} 
	{
		#cursor {HISTORY PREV};
	};
	#if {%0 > $split[top] && %0 < $screen[rows] - $split[bottom]} 
	{
		#if {"$screen[scroll]" == "page"} 
		{
			#buffer up $screen[rows]
		}; 
		#elseif {"$screen[scroll]" == "line"} 
		{
			#buffer up 1
		};
	};
	#if {%0 < $split[top]} 
	{
		chatup
	};
};

#event {SCROLLED MOUSE WHEEL DOWN} 
{
	#if {%0 > $screen[rows] - $split[bottom]} 
	{
		#cursor {HISTORY NEXT};
	};

	#if {%0 > $split[top] && %0 < $screen[rows] - $split[bottom]} 
	{
		#if {"$screen[scroll]" == "page"} 
		{
			#buffer down $screen[rows]
		}; 
		#elseif {"$screen[scroll]" == "line"} 
		{
			#buffer down 1
		}
	};

	#if {%0 < $split[top]} 
	{
		chatdown
	}
};

#event {SESSION DISCONNECTED} 
{
	#map get roomvnum {map[$char[ourCharacter]][position]};
	.mapSave;
	.save;
};

/* Map mouse clicks*/
#event {MAP UPDATED VTMAP} 
{
	.triggerEvent onMapUpdated;
};

#NOP Display room info on single-click
#event {MAP SHORT-CLICKED MOUSE BUTTON ONE} 
{
	#map at %0 #map info
} {1};

#NOP Map goto room on double-click
#event {MAP DOUBLE-CLICKED MOUSE BUTTON ONE} 
{
	#map goto %0
};

#NOP Map run on right-click
#event {MAP SHORT-CLICKED MOUSE BUTTON THREE} 
{
	#map run %0
};

#EVENT {RECEIVED INPUT} 
{
	#var idle 0;
	#var event[input] %0;
	.triggerEvent onReceivedInput;	
};


#class {events} {close}
