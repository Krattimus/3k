#showme READING MONKS

#class {bladesinger} {open}

/**********************************************************************************
	Data
**********************************************************************************/
#var bladesinger[xp] 0;
#var bladesinger[runeSlot] 1;
#var bladesinger[itemSlot] 1;
#var bladesinger[defaultItem] {};

#var bladesinger[defaultRunes]
{
	{1}{health}{2}{revalrie}{3}{rejuvenation}{4}{spirit}{5}{power}
};


#HIGHLIGHT {You feel your body rejuvenate as the spirit realm flows into you.} {<128>};
#gag {Doing combat strategy: rejuvenate.};
#gag {Casting this spell would not benefit you at this time.};
#gag {Your evade2 strategy forces you to: rejuvenate};
#var bladesinger[runes] 
{
	{greaves}{{1}{health}{2}{revalrie}{3}{power}{4}{battle}{5}{stone}}
	{gloves}{{1}{health}{2}{revalrie}{3}{power}{4}{battle}{5}{stone}}
	{cloak}{{1}{health}{2}{revalrie}{3}{power}{4}{battle}{5}{stone}}
	{boots}{{1}{health}{2}{revalrie}{3}{power}{4}{battle}{5}{stone}}
	{armbands}{{1}{health}{2}{revalrie}{3}{power}{4}{battle}{5}{stone}}
	{helmet}{{1}{health}{2}{revalrie}{3}{power}{4}{battle}{5}{stone}}
	{shield}{{1}{health}{2}{revalrie}{3}{power}{4}{battle}{5}{stone}}
	{breastplate}{{1}{health}{2}{revalrie}{3}{power}{4}{battle}{5}{stone}}
	{sword}{{1}{health}{2}{revalrie}{3}{power}{4}{starfire}{5}{thought}{6}{eternity}}
};

/**********************************************************************************
	Events
**********************************************************************************/
.registerEvent onNewMipGline onNewMipGlineBladesinger;
.registerEvent onMobKilled onMobKilledBladesinger;
.registerEvent onNewCombatRound onNewCombatRoundBladesinger;

/**********************************************************************************
	Inscribe runes
**********************************************************************************/
#alias .runeItem
{
        remove %1;
        #send pprepare %1;
        
        #delay 7 {
                #send !pinscribe health on %1;
                #delay 7 {
                        #send !pinscribe revalrie on %1;
                        #delay 7 {
                                #send !pinscribe power on %1;
                                #delay 7 {
                                        #send !pinscribe spirit on %1;
                                        #delay 7 {
                                                #send !pinscribe rejuvenation on %1;
                                        };
                                };
                        };
                };
        };
};


#alias .runeAllItems
{
	#var bladesinger[runeSlot] 1;

	#TICKER {runeprep} 
	{
		.runeDoNextPrepare;
	} {5};


	#send !pinscribe $bladesinger[runes][$bladesinger[runeSlot]] on %1;
};

#alias .runeInscribeDefault
{



};

#alias .runeDoNextInscribe
{
	#send !pinscribe $bladesinger[runes][*bladesinger[runes][+$bladesinger[itemSlot]]][$bladesinger[runeSlot]] on *bladesinger[runes][+$bladesinger[itemSlot]];
	#math {bladesinger[runeSlot]} {$bladesinger[runeSlot]+1};

	#if { $bladesinger[runeSlot] > @getNumElements{bladesinger[runes][*bladesinger[runes][+$bladesinger[itemSlot]]]} }
	{
			#math {bladesinger[itemSlot]} {$bladesinger[itemSlot]+1};
			#var bladesinger[runeSlot] 1;

			#if { $bladesinger[itemSlot] >= @getNumElements{bladesinger[runes]} }
			{
					#UNTICKER {runeme};
					#var bladesinger[itemSlot] 1;
			};
	};
};

#alias .runeDoNextPrepare
{
	#send pprepare *bladesinger[runes][+$bladesinger[itemSlot]];
	#math {bladesinger[itemSlot]} {$bladesinger[itemSlot]+1};

	#if { $bladesinger[itemSlot] > @getNumElements{bladesinger[runes]} }
	{
			#UNTICKER {runeprep};
			#var bladesinger[itemSlot] 1;
	};
};


#alias .runePrepare
{
        #TICKER {runeprep} 
        {
			.runeDoNextPrepare;
        } {5};
};

#alias .runeInscribe
{
        #TICKER {runeme} 
        {
			.runeDoNextInscribe;
        } {5};
};

/**********************************************************************************
	Client side kill trig
**********************************************************************************/
#alias {onMobKilledBladesinger}
{
	#send salute;
	#send hp;
	#send take all from corpse;
	#send take coins from corpse;
	#send wrap;

	#if { $char[isResting] }
	{
		#send revalrie;
	};
};

#alias .bladeSingerRestCheck
{
	#if { $patroller[isPatrolling] }
	{
		#if { $my[gp1][current] < $my[gp1][max]/2 && !$char[isResting] }
		{
			#draw Yellow scroll line 1 1 1 80;
			#showme Initiating a rest due to HP;
			#draw Yellow scroll line 1 1 1 80;
			#var controllers[current] resting;
			#var char[isResting] 1;
			.stop;
		};

		#if { $my[hp][current] <= $char[restHP] && !$char[isResting] }
		{
			#draw Yellow scroll line 1 1 1 80;
			#showme Initiating a rest due to Ne'Kra;
			#draw Yellow scroll line 1 1 1 80;
			#var controllers[current] resting;
			#var char[isResting] 1;
			.stop;
		};
	};

};
/*************************************************************************************
	Round of combat
*************************************************************************************/
#alias onNewCombatRoundBladesinger
{
	#if {$currentRoundID <= 1}
	{
		#send !consider;
	};

	#math {normalizedHp} { $Bladesinger[salveThreshold]*$my[hp][max]/100 };


	.bladeSingerRestCheck;
};

/*************************************************************************************
	Parse MIP
	Line1: [0 / 0 / 0/ 0]  [BL (49%):  0 / 0 ]  Mode:[Freeform]  [17%]  [F]
	Line2: [XTNL: -12274834]
*************************************************************************************/
#ALIAS {onNewMipGlineBladesinger} 
{
	#REGEX {$mip[gline][2]}{XTNL: %?%d<} 
	{
		#var	{bladesinger[xp]}	{&1}{&2};
	};

	#if { $char[isResting] }
	{
		#if {  $my[gp1][current] >= $my[gp1][max] &&  $my[hp][current] >= $char[resumeHP]   }
		{
			#var char[isResting] 0;
			.resume;
			#send freeform;
		};
	};
};

/**********************************************************************************
	Spam check
**********************************************************************************/
#gag {^You miss %*.};
#gag {^You slice %*.};
#gag {^You feint %*.};
#gag {^You slash %*.};
#gag {^You carve %*.};
#gag {^You dice %*.};
#gag {^You study %*.};
#gag {^You gash %*.};
#gag {You attempt to dodge your foes' attacks.};
#gag {You study %1's movements closely.};
#gag {You adjust your grip to prepare for an opening.};


/*************************************************************************************
	Render hp bar
*************************************************************************************/
#alias {.renderBladesingerBar} 
{
	#if {"$cooler" == "on" || $corpses[cooler] > 0} 
	{
		#format {sb1_cooler} {%+2s} {$corpses[cooler]};
		#var {sb1_cooler} { CL:<130>$sb1_cooler<088>};
	};
	#else
	{
			#var {sb1_cooler} {};
	};
	#if {"$freezer" == "on" || $corpses[freezer] > 0} 
	{
			#format {sb2_freezer} {%+2s} {$corpses[freezer]};
			#var {sb2_freezer} { FZ:<130>$sb2_freezer<088>};
	};
	#else
	{
			#var {sb2_freezer} {};
	};

	#var    {my[hp][graph]}         {@graph{$my[hp][current];${my[hp][max]}}};
	#var    {my[sp][graph]}         {@graph{$my[sp][current];$my[sp][max]}};
	#var    {my[gp1][graph]}        {@graph{$my[gp1][current];$my[gp1][max]}};
	#var    {my[gp2][graph]}        {@graph{$my[gp2][current];$my[gp2][max]}};
	#var    {enemy[graph]}          {@graph{$enemy[hp];100}};
	#format {hp}					{%-4s} {@colscale{$my[hp][current];$my[hp][max]}};
	#format {hp_max}				{%-4s} {<128>$my[hp][max]<088>};
	#format {sp}					{%-4s} {@colscale{$my[sp][current];$my[sp][max]}};
	#format {sp_max}				{%-4s} {<128>$my[sp][max]<088>};
	#format {gp1}                   {%-4s} {@colscale{$my[gp1][current];$my[gp1][max]}};
	#format {gp1_max}               {%+4s} {<128>$my[gp1][max]<088>};
	#format {gp2}                   {%-4s} {@colscale{$my[gp2][current];$my[gp2][max]}};
	#format {gp2_max}               {%+4s} {<128>$my[gp2][max]<088>};
	
	#if { "$enemy[name]" != "" }
	{
		#showme {<148>$enemy[name]<088> <048>(<138>$event[rating]<048>)<088> <048>[<138>$mip[round]<048>]<088> $enemy[graph]<088>} {-6};
	};
	#else
	{
		#showme {  } {-6};
	};
	#showme {<048>HP<088>  ${hp}/${hp_max}  <048>SP<088>  ${sp}<048>/<088>${sp_max}<088> <048>Ne'kra<088>  ${gp1}<048>/<088>${gp1_max}  <048>So'kra<088>  ${gp2}<048>/<088>${gp2_max}}  {-3};
	#showme {<058>$bladesinger[mode]<088> <038>GXP: <138>$bladesinger[gxp]%%<088> <038>XP: <138>$bladesinger[xp]<088>}{-4};
};

/*************************************************************************************
	Guild line
*************************************************************************************/
#action {^H:%d/%d S:%d/%d S:%d/%d N:%d/%d X:%d.%d %w}
{
	#var bladesinger[gxp] %9.%10;
	#var bladesinger[mode] %11;
	.bladeSingerRestCheck;
};


#class {Bladesinger} {close}
