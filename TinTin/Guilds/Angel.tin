#class {angel} {open}

/* Set Guild Variable*/
#var angel[isEnabled] 1;
#var angel[distanceBetween] 0;
#var angel[distanceField] {};
#var angel[lastAction] {};
#var angel[threshold] 100;
#var angel[smack] 75;
#var angel[presage] 30;
#var angel[aegis] 0;
#var angel[strikeCounter] 0;
#var angel[restEndurance] 60;
#var angel[isResting] 0;
#var angel[spacesBehind] 5;

#var angel[isEngaging] 0;

.registerEvent onPreKilledMob onMobKilledAngel;
.registerEvent onMobAttacked onMobAttackedAngel;
.registerEvent onNewCombatRound onNewCombatRoundAngel;
.registerEvent onNewMipGline onNewMipGlineAngel;

/*************************************************************************************
	Mob was attacked
*************************************************************************************/
#alias {onMobAttackedAngel}
{
	#NOP {nothing};
};

/*************************************************************************************
	Mob was killed
*************************************************************************************/
#alias onMobKilledAngel
{
	#NOP {nothing};
};

/*************************************************************************************
	Round of combat
*************************************************************************************/
#alias onNewCombatRoundAngel
{
	#var angel[lastAction] {};

	#NOP { NON ANGEL? SOULD BE IN BASE CONTROLLER? };
	#if { $currentRoundID <= 1 }
	{
		#send !consider;
		#var angel[isEngaging] 0;
	};

	#NOP { THIS DOES NOT BELONG HERE, BUT FOR NOW, DETERMINE IF THE PATROLLER NEEDS TO REST };
	#if { $patroller[isPatrolling] }
	{
		#if { $angel[endurance] < $angel[restEndurance] && !$angel[isResting] }
		{
			#var angel[isResting] 1;
			.stop;
		};
	};


	#if { $angel[isEnabled] }
	{
		#local max @getNumElements{angel[advantages]};

		#NOP { DETERMINE ENGAGEMENT };
		#if { $angel[spacesBehind] <= 0 }
		{ 
			#var angel[isEngaging] 1; 
		};

		#NOP { RETREAT UNTIL WALL, THEN STRIKE };
		#if { $angel[spacesBehind] > 0 && !$angel[isEngaging] }
		{
			#var angel[lastAction] disengage;
			#send !$angel[lastAction];
		};
		#elseif { $angel[distanceBetween] > 1 }
		{
			#var angel[lastAction] engage;
			#send !$angel[lastAction];
		};
		
		#NOP { DETERMINE STRIKES IF CLOSE ENOUGH };
		#if { $angel[distanceBetween] <= 0 }
		{
			#NOP { DETERMINE A SINGLE DIVINE STRIKE };
			#if { *angel[advantages][+$max] > $angel[threshold] }
			{
				#var angel[lastAction] divine strike $angel[advantages][+$max];

				#math {angel[strikeCounter]} {$angel[strikeCounter] + 1};
				#math {shouldRetribute} {$angel[strikeCounter] % 4};
				#if { $shouldRetribute == 0 }
				{
					#var angel[lastAction] retribution $angel[advantages][+$max];
				};

				#send !$angel[lastAction];
			};
			#NOP { DETERMINE PRESAGE };
			#else
			{
				#math {runnerUp} {$max-1};
				#math {runnerTwo} {$max-2};
				#if { *angel[advantages][+$runnerUp] > $angel[presage] }
				{
					#var angel[lastAction] presage $angel[advantages][+$runnerUp];
					#send !$angel[lastAction];
				};
				#elseif { *angel[advantages][+$runnerTwo] > $angel[presage] }
				{
					#var angel[lastAction] presage $angel[advantages][+$runnerTwo];
					#send !$angel[lastAction];
				};
			};
		};
	};

	#UNVARIABLE {angel[advantages]};
};

#action {You are already surrounded in an aegis} { #var angel[aegis] 1; }
#action {Your aegis fades away} { #var angel[aegis] 0; }
#action {Your armour glows with a radiant aegis} { #var angel[aegis] 1; }
#action {You have no where to retreat} 
{
	#var angel[spacesBehind] 0;
};
/*************************************************************************************
	Mip sent us newest data

	hpset hpbar $FLAGS$HP:$HP$/$HPMAX$ | SP:$SP$/$SPMAX$ | TS:$TS$/$TSMAX$ | DV:$DV$/$DVMAX$ | EN:$EN$/$ENMAX$ $NL$ HO:$ADVHO$/$WKHO$ HI:$ADVHI$/$WKHI$ LO:$ADVLO$/$WKLO$ LI:$ADVLI$/$WKLI$ $NL$ Enemy:$ENEMY$ $DIST$
	hpset gline2 [$FLAGS$]$DIST$ F:$FOCUSSTAT$|$FOCUSGXP$ | TS:$TS$/$TSMAX$ | DV:$DV$/$DVMAX$ | EN:$EN$/$ENMAX$
*************************************************************************************/
#alias onNewMipGlineAngel
{
	#REGEXP {$mip[gline][1]} {HO:%d.%d/%d HI:%d.%d/%d LO:%d.%d/%d LI:%d.%d/%d} 
	{
		#var angel[advantages][&1.&2] ho;
		#var angel[advantages][&4.&5] hi;
		#var angel[advantages][&7.&8] lo;
		#var angel[advantages][&10.&11] li;
		#var angel[ho]		{&1.&2};
		#var angel[hi]		{&4.&5};
		#var angel[lo]		{&7.&8};
		#var angel[li]		{&10.&11};
	} {
		#NOP no response;
	};

	#REGEXP {$mip[gline][2]} {F:%w|%d.%d\% | TS:%d/%d | DV:%d/%d | EN:%d/%d}
	{
		#var angel[focusSkill] {&1};
		#var angel[focus] {&2.&3};
		#var angel[timeSlice] &4;
		#var angel[timeSliceMax] &5;
		#var angel[divinity] &6;
		#var angel[divinityMax] &7;
		#var angel[endurance] &8;
		#var angel[enduranceMax] &9;		
	};

	#REGEXP {$mip[gline][2]} {^{\[.*\](.*)(F.*)}$}
	{
		#var {angel[distanceField]} {&2};
	} {
		#NOP no response;
	};

	#REGEXP {$mip[gline][2]} {^{|.*[PM](-*)[PM].*|}$} 
	{
		#var angel[distanceBetween] @strlen{&2}; 
	};

	#REGEXP {$mip[gline][2]} {|%SP} 
	{
		#var angel[spacesBehind] @strlen{&1};
	};

	#REGEXP {$mip[gline][2]} {M%SP%S|} 
	{
		#var angel[spacesBehind] @strlen{&2};
	};

	#REGEXP {$mip[gline][2]} {]|P}
	{
		#var angel[spacesBehind] 0;
	};

	#REGEXP {$mip[gline][2]} {P|}
	{
		#var angel[spacesBehind] 0;
	};

	#if { $angel[isResting] }
	{
		#if { $angel[endurance] >= $angel[enduranceMax] }
		{
			#var angel[isResting] 0;
			.resume;
		};
	};
};

/*************************************************************************************
	Renders custom HP Bar for this guild
*************************************************************************************/
#alias {.renderAngelBar}
{
	#if {"$cooler" == "on" || $corpses[cooler] > 0} 
	{
			#format {sb1_cooler} {%+2s} {$corpses[cooler]};
			#var {sb1_cooler} { CL:<130>$sb1_cooler<088>}
	};
	#else
	{
			#var {sb1_cooler} {}
	};

	#if {"$freezer" == "on" || $corpses[freezer] > 0} 
	{
			#format {sb2_freezer} {%+2s} {$corpses[freezer]};
			#var {sb2_freezer} { FZ:<130>$sb2_freezer<088>}
	};
	#ELSE 
	{
			#var {sb2_freezer} {}
	};

	#var {my[hp][graph]}		{@graph{$my[hp][current];$my[hp][max]}};
	#var {my[sp][graph]}		{@graph{$my[sp][current];$my[sp][max]}};
	#var {my[gp1][graph]}		{@graph{$my[gp1][current];$my[gp1][max]}};
	#var {my[gp2][graph]}		{@graph{$my[gp2][current];$my[gp2][max]}};
	#var {angel[g][graph]}		{@graph{$angel[g][per];100}};
	#var {enemy[graph]}		{@graph{$enemy[hp];100}};
	#format {hp}			{%-4s} {@colscale{$my[hp][current];$my[hp][max]}};
	#format {hp_max}		{%-4s} {<128>$my[hp][max]<088>};
	#format {sp}			{%-4s} {@colscale{$my[sp][current];$my[sp][max]}};
	#format {sp_max}		{%-4s} {<128>$my[sp][max]<088>};
	#format {time}			{%+4s} {@colscale{$my[gp1][current];$my[gp1][max]}};
	#format {time_max}		{%-4s} {<128>$my[gp1][max]<088>};
	#format {divinity}		{%+4s} {@colscale{$my[gp2][current];$my[gp2][max]}};
	#format {divinity_max}	{%-4s} {<128>$my[gp2][max]<088>};
	#format {endurance}		{%+4s} {@colscale{$angel[endurance];$angel[enduranceMax]}};
	#format {endurance_max}	{%-4s} {<128$angel[enduranceMax]<088>};


	#format {ehealth}		{%+3s} {@colscale{$enemy[hp];100}};
	#format {corpses[inventory]}    {%+2s} {$corpses[inventory]};
	#format {corpses[coffin]}       {%+2s} {$corpses[coffin]};

	#showme {<048>H<088> ${hp}/${hp_max} <048>TS<088> ${time}/${time_max} <048>D<088> ${divinity}/${divinity_max} <048>E<088> ${endurance}} {-3};

	#if { "$enemy[name]" != "" }
	{
		#showme {<038>HO: <138>$angel[ho]<088> <038>HI: <138>$angel[hi]<088> <038>LO: <138>$angel[lo]<088> <038>LI: <138>$angel[li]<088> <048>[<148>$angel[distanceBetween]<088><048>] <048>$angel[distanceField]<088>} {-4};
		#showme {<148>$enemy[name]<088> <048>(<138>$event[rating]<048>)<088> <048>[<138>$mip[round]<048>]<088> $enemy[graph]<088> <148>$angel[lastAction]<088>} {-6};
	};
	#else
	{
		#showme {  } {-6};
		#showme {<048>$angel[focusSkill]<088> <138>$angel[focus]<088> <048>Corpses:  I <138>$corpses[inventory]<088> <048>C <138>$corpses[coffin]<088>} {-4};
	};
};

/*************************************************************************************
	Displays a 1 line gs
*************************************************************************************/
#alias .gxp
{
	#draw Yellow scroll line 1 1 1 80;
	#showme { <048>$angel[focusSkill]<088> <138>$angel[focus]<088> };
	#draw Yellow scroll line 1 1 1 80;
};

/*************************************************************************************
	Corrective measure
*************************************************************************************/
#ACTION {You are already as close as you can get to your foe!} 
{
	#var angel[distanceBetween] 0;
} {5};

#class {angel} {close}
